radius:
  #  Default secret
  secret: secret
  # Clients with specific secrets (Clients are resolved based on IP address)
  # Each client MUST have a unique name.
  clients:
    - name: vpn-client
      secret: secret
      ips:
        - 10.0.0.0/24
  auth-port: 1812
  listen-address: 0.0.0.0
  # Attribute list extension for RADIUS
  dictionaries:
    - file:<some_path>/<some_name>.dat
  # Attributes that will be returned in response on successful authentication
  attributes:
    # Copies each returned attribute into the response
    copy-state: true
    # Attributes for all users
    defaults:
      Service-Type: NAS-Prompt-User
    # Attributes for specific users
    for-users:
      john:
        Service-Type: Login-User
    # Attributes for specific user or group of users in LDAP
    ldap:
      memberOf:
        '[cn=admins,ou=groups,dc=test,dc=com]':
          Service-Type: Administrative
      uid:
        john_wick:
          Class: Pro
    # When conditional is enabled, it allows to specify a script that will check the condition under which the attribute will be returned
    conditional:
      '[ldapUser.attributes["uid"] == "john"]':
        Service-Type:
          - Login-User
      '[request.getAttributeValue("User-Name") == "john"]':
        Class:
          - RDP_HeadOffice_GP
  ip-attributes:
    - NAS-IP-Address
    - NAS-IPv6-Address

auth:
  providers:
    #  Could be :
    - LDAP
    - AD
    - PROTECTIMUS_PASSWORD
    - PROTECTIMUS_OTP
    - RADIUS_PROXY
  # When bypass-otp is enabled, OTP is not requested for specified users
  bypass-otp:
    ldap-filter: (memberOf=cn=bypass-otp,ou=groups,dc=test,dc=com)
    usernames:
      - john
      - luci
    ips:
      - 10.0.0.0/24
      - 1::/64
  # When re-enter-otp is enabled, password is not requested after unsuccessful OTP check
  re-enter-otp: true

  # When normalization is enabled any domain information is stripped from the username,
  # so "username", "DOMAIN\username" and "username@domain.com" would all resolve to a single "username"
  principal-normalization: true

  # Inline mode allows you to use 2fa in case when Access-Challenge is not supported.
  # Inline mode can be activated with 'enabled: true' or using request attributes
  # In this case password must be in following format 'password,otp', if using separator: ','
  inline-mode:
    enabled: false
    separator: ''
    attributes:
      State: INLINE
      NAS-Identifier:
        - home-nas
        - work-nas

#Configuration for LDAP auth provider
ldap:
  base: dc=test,dc=com
  urls:
    - ldap://127.0.0.1:389
  username:
  password:

  # Is used for LDAP authentication by defined attribute
  principal-attribute: userPrincipalName
  custom-filter: (memberof=cn=managers,ou=groups,dc=test,dc=com)
  base-environment:
    -java.naming.referral: follow

#Configuration for AD auth provider
ad:
  urls:
    - ldap://127.0.0.1:389
  domain: test.com
  base-environment:
    -java.naming.referral: follow

#Configuration for PROTECTIMUS_PASSWORD/PROTECTIMUS_OTP auth provider
protectimus-api:
  login: test@protectimus.com
  api-key: secret
  url: https://api.protectimus.com/
  resource-id: 1

#Configuration for RADIUS_PROXY auth provider
proxy:
  secret: secret
  auth-port: 1812
  remote-address: 192.168.1.1

logging:
  level:
    com.protectimus.radius: INFO